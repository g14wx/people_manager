name: Node.js CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: person_favs_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready -U test_user -d person_favs_test
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/person_favs_test?schema=public
        run: npx prisma generate

      - name: Run Migrations (Reset DB Schema)
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/person_favs_test?schema=public
          NODE_ENV: test
        run: npx prisma migrate reset --force

      - name: Run Database Seeders
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/person_favs_test?schema=public
          NODE_ENV: test
        run: npm run db:seed

      - name: Run Tests (Jest)
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/person_favs_test?schema=public
          NODE_ENV: test
        run: jest --runInBand --ci --detectOpenHandles --forceExit